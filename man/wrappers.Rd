% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calendario.R, R/wrappers.R
\name{wrappers}
\alias{wrappers}
\alias{cal_add_task}
\alias{cal_set_project}
\alias{cal_get_workload}
\alias{cal_get_calendar}
\alias{cal_get_tasks}
\title{Convenience functions}
\usage{
cal_add_task(x, ...)

cal_set_project(x, ...)

cal_get_workload(x, ...)

cal_get_calendar(x, ...)

cal_add_task(x, ...)

cal_get_tasks(x, ...)

cal_set_project(x, ...)

cal_get_workload(x, ...)

cal_get_calendar(x, ...)
}
\arguments{
\item{x}{A calendario object}

\item{...}{Arguments to be passed to the relevant R6 method}
}
\value{
Invisibly returns the calendario object

Invisibly returns the calendario object
}
\description{
\code{cal_task()} and \code{cal_project()} are convenience functions that
allow a piped workflow with calendario objects

\code{cal_task()} and \code{cal_project()} are convenience functions that
allow a piped workflow with calendario objects
}
\details{
These functions are wrappers around one of the calendario object
methods: \code{cal_add_task()} is a wrapper around \verb{$add_task()},
\code{cal_set_project()} is a wrapper around \verb{$set_project()} and so
on. In all cases the functions take a calendario object \code{x} as
their first argument, and all other arguments are passed via \code{...}
to the relevant calendario R6 method.

These functions are wrappers around one of the calendario object
methods: \code{cal_add_task()} is a wrapper around \verb{$add_task()},
\code{cal_set_project()} is a wrapper around \verb{$set_project()} and so
on. In all cases the functions take a calendario object \code{x} as
their first argument, and all other arguments are passed via \code{...}
to the relevant calendario R6 method.
}
\examples{
cal <- calendario$new()
cal |>
  cal_set_project("project-name") |>
  cal_add_task("description-1", "29 may") |>
  cal_add_task("description-2", "1 jun") |>
  cal_get_workload()
cal <- calendario$new()
cal |>
  cal_set_project("project-name") |>
  cal_add_task("description-1", "29 may") |>
  cal_add_task("description-2", "1 jun") |>
  cal_get_workload()
cal$get_tasks()
}
